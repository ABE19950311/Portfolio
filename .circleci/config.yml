version: 2.1

orbs:
  ruby: circleci/ruby@1.8.0

jobs:
  build:
    docker:
      - image: cimg/ruby:3.1.2-node
    working_directory: ~/Portfolio/backend
    steps:
      - checkout:
          path: ~/Portfolio
      - ruby/install-deps

  rspec:
    docker:
      - image: cimg/ruby:3.1.2-node
      - image: cimg/mysql:8.0
        environment:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: backapp_test
          MYSQL_USER: root
          RAILS_ENV: test
    environment:
      BUNDLE_JOBS: "3"
      BUNDLE_RETRY: "3"
      APP_DATABASE_HOST: "127.0.0.1"
      RAILS_ENV: test
    working_directory: ~/Portfolio/backend
        
    steps:
      - checkout:
          path: ~/Portfolio
      - ruby/install-deps

      # restore gem from cache
      - restore_cache:
          keys:
            - gem-cache-v1-{{ checksum "~/Portfolio/backend/Gemfile.lock" }}
            - gem-cache-v1-
          working_directory: ~/Portfolio/backend

      # gem install
      - run:
          command: |
            gem install bundler
            bundle config set path 'vendor/bundle'
            bundle install --jobs=4 --retry=3
          working_directory: ~/Portfolio/backend

      - save_cache:
          key: gem-cache-v1-{{ checksum "~/Portfolio/backend/Gemfile.lock" }}
          paths:
            - ~/Portfolio/backend/vendor/bundle
          working_directory: ~/Portfolio/backend

      # Database setup
      - run:
          command: bundle exec rails db:create
          working_directory: ~/Portfolio/backend
      - run:
          command: bundle exec rails db:migrate
          working_directory: ~/Portfolio/backend

      - run:
          name: create directory to store test results
          command: mkdir /tmp/test-results
          working_directory: ~/Portfolio/backend

      # run tests
      - run:
          name: RSpec
          command: |
            bundle exec rspec $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings) \
              || (printf "====== RETRYING...\n\n\n"; bundle exec rspec --only-failures)
          working_directory: ~/Portfolio/backend

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
      - store_artifacts:
          path: /home/circleci/Portfolio/tmp/screenshots

  jest:
    docker:
      - image: cimg/node:18.0.0
        environment:
          NODE_ENV: test

    working_directory: ~/Portfolio

    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "~/Portfolio/frontend/package.json" }}
          working_directory: ~/Portfolio/frontend
      - run:
          name: install-packages
          command: npm install
          no_output_timeout: 30m
          working_directory: ~/Portfolio/frontend
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "~/Portfolio/frontend/package.json" }}
          working_directory: ~/Portfolio/frontend
      - run:
          name: test
          command: npm run test
          working_directory: ~/Portfolio/frontend

workflows:
  version: 2
  rspec_and_jest:
    jobs:
      - build
      - rspec:
          requires:
            - build
      - jest